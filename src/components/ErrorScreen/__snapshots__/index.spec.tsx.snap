// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorScreen shows network error 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    edges={
      Array [
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "padding": 16,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "textAlign": "left",
          },
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "fontFamily": "System",
              "fontWeight": "400",
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "fontSize": 24,
                "letterSpacing": 0,
                "lineHeight": 32,
                "marginVertical": 2,
              },
              Object {
                "textAlign": "center",
              },
            ],
          ],
        ]
      }
    >
      error.network
    </Text>
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "#015aa5",
          "borderColor": "transparent",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "elevation": 2,
          "marginTop": 24,
          "minWidth": 64,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 0.75,
            "width": 0,
          },
          "shadowOpacity": 0.24,
          "shadowRadius": 1.5,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 4,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                },
                Object {
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  Object {
                    "textTransform": "uppercase",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            button.retry
          </Text>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;

exports[`ErrorScreen shows unexpected error 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    edges={
      Array [
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "padding": 16,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "textAlign": "left",
          },
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(0, 0, 0, 0.87)",
              "fontFamily": "System",
              "fontWeight": "400",
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "fontSize": 24,
                "letterSpacing": 0,
                "lineHeight": 32,
                "marginVertical": 2,
              },
              Object {
                "textAlign": "center",
              },
            ],
          ],
        ]
      }
    >
      error.unexpected
    </Text>
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "#015aa5",
          "borderColor": "transparent",
          "borderRadius": 4,
          "borderStyle": "solid",
          "borderWidth": 0,
          "elevation": 2,
          "marginTop": 24,
          "minWidth": 64,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 0.75,
            "width": 0,
          },
          "shadowOpacity": 0.24,
          "shadowRadius": 1.5,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 4,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                },
                Object {
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  Object {
                    "textTransform": "uppercase",
                  },
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            button.retry
          </Text>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</View>
`;
